version: '2.0'

services:
  servermysql:
    build:
      context: Server
      dockerfile: Dockerfile
    environment:
      - PORT=6001
    restart: always
    ports:
    - "6001:6001"
    networks:
    - mysql
    links:
    - "mysql:mysql"
    depends_on:
    - mysql
    volumes: 
    - ./mvn-cache:/root/.m2


  # servermongodb:
  #   build:
  #     context: Server
  #     dockerfile: Dockerfile
  #     args:
  #       - DB=MongoDB
  #   environment:
  #     - PORT=6002
  #   #restart: always
  #   ports:
  #   - "6002:6002"
  #   networks:
  #   - mongo
  #   links:
  #   - "mongodb:mongodb"
  #   depends_on:
  #   - mongodb

  # serverneo4j:
  #   build:
  #     context: Server
  #     dockerfile: Dockerfile
  #     args:
  #       - DB=Neo4j
  #   environment:
  #     - PORT=6003
  #   restart: always
  #   ports:
  #   - "6003:6003"
  #   networks:
  #   - neo
  #   links:
  #   - "neo:neo"
  #   depends_on:
  #   - neo

  mysql:
    image: mysql:5.5
    restart: always
    networks:
    - mysql
    environment:
    - MYSQL_ROOT_PASSWORD=bla
    - MYSQL_ROOT_HOST=172.18.0.3
    - MYSQL_DATABASE=test
    - MYSQL_USER=user
    - MYSQL_PASSWORD=password
    ports:
    - "3306:3306"
    volumes:
    - ./mysql-data:/var/lib/mysql

  # mongodb:
  #   image: mongo
  #   environment:
  #   - MONGO_INITDB_ROOT_USERNAME=bla
  #   - MONGO_INITDB_ROOT_PASSWORD=password
  #   #restart: always
  #   networks:
  #   - mongo
  #   ports:
  #     - "27017:27017"
  #   volumes:
  #     - mongodata:/data/db

  # neo:
  #   image: neo4j:3.0
  #   environment:
  #   - NEO4J_AUTH=bla:password 
  #   networks:
  #   - neo
  #   ports:
  #    - "7687:7687"
  #   volumes:              
  #    - ./neo4j-data:/data/dbms

  # frontend:
  #   build:
  #     context: frontend
  #     dockerfile: Dockerfile
  #   restart: always
  #   ports:
  #   - "5000:5000"
  #   depends_on:
  #   - servermysql
  #   - servermongodb
  #   volumes: 
  #   - npm-cache:/root/.npm

volumes: 
  npm-cache:
    external: false

networks:
  mysql:
    driver: bridge
  # mongo:
  #   driver: bridge
  # neo:
  #   driver: bridge